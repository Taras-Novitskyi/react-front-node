{"version":3,"file":"static/js/969.9f081064.chunk.js","mappings":"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","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","redux/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","components/Fillter/Fillter.jsx","components/Loader/Loader.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  color: rgb(100, 100, 100);\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './Section.styled';\nimport { Box } from '@mui/material';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column',\n      }}\n    >\n      {title && <Title>{title}</Title>}\n      {children}\n    </Box>\n  );\n};\n\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n  const normalizeFilter = filter.toLowerCase();\n\n  if (normalizeFilter === '') {\n    return contacts;\n  }\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizeFilter)\n  );\n};\n\n","import styled from 'styled-components';\n\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 280px;\n  padding: 20px;\n  margin: 0 auto;\n  font-size: 16px;\n  border: 1px solid rgb(222, 222, 222);\n`;\n\nexport const Input = styled.input`\n  display: flex;\n  width: 100%;\n  margin-bottom: 8px;\n  margin-top: 4px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin-top: 20px;\n  margin-right: auto;\n  margin-left: auto;\n  width: 120px;\n  height: 28px;\n  font-size: 12px;\n  font-weight: 500;\n  text-transform: uppercase;\n  background-color: rgb(230, 230, 230);\n\n  border-radius: 8px;\n  cursor: pointer;\n\n  box-shadow: 0px 2px 3px 0px rgba(62, 118, 120, 1);\n  transition: transform 100ms ease-in-out;\n\n  :hover {\n    box-shadow: 1px 3px 3px 0px rgba(150, 150, 150, 1);\n    transform: translate(-1px, -1px);\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { Button, Box, TextField } from '@mui/material';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport PhoneIphoneIcon from '@mui/icons-material/PhoneIphone';\nimport { selectContacts, selectIsLoading } from 'redux/selectors';\nimport { addContact } from 'redux/operation';\nimport { Form } from './ContactForm.styled';\n\nexport function ContactForm({ onSubmit }) {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const name = event.target.elements.name.value;\n    const inputNumber = event.target.elements.phone.value;\n    let phone = inputNumber;\n    if (inputNumber.length <= 7) {\n      phone =\n        inputNumber.substr(0, 3) +\n        '-' +\n        inputNumber.substr(3, 2) +\n        '-' +\n        inputNumber.substr(4, 2);\n    } else if (inputNumber.length > 7 && inputNumber.length <= 10) {\n      phone =\n        inputNumber.substr(0, 3) +\n        '-' +\n        inputNumber.substr(3, 3) +\n        '-' +\n        inputNumber.substr(6, 4);\n    } else if (inputNumber.length > 10) {\n      phone =\n        inputNumber.substr(0, 3) +\n        '-' +\n        inputNumber.substr(3, 3) +\n        '-' +\n        inputNumber.substr(6, 4) +\n        '-' +\n        inputNumber.substr(10, 4);\n    }\n\n    const dublicateName = contacts.find(contact => contact.name === name);\n    const dublicateNumber = contacts.find(contact => contact.phone === phone);\n\n    if (dublicateName) {\n      toast.error(`${name} is already in contacts.`);\n      event.target.reset();\n      return;\n    }\n\n    if (dublicateNumber) {\n      toast.error(`Contact with number ${phone} is already in contacts.`);\n      event.target.reset();\n      return;\n    }\n\n    onSubmit();\n    dispatch(addContact({ name, phone }));\n    event.target.reset();\n    toast.success(`Contact ${name} is added in contacts.`);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\n        <AccountCircle sx={{ color: 'action.active', mr: 1, mb: 1 }} />\n        <TextField\n          label=\"name\"\n          variant=\"standard\"\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Will Smith\"\n          inputProps={{\n            inputMode: 'numeric',\n            pattern:\n              \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n          }}\n          margin=\"normal\"\n          required\n        />\n      </Box>\n      <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\n        <PhoneIphoneIcon sx={{ color: 'action.active', mr: 1, mb: 1 }} />\n        <TextField\n          label=\"number\"\n          variant=\"standard\"\n          type=\"text\"\n          name=\"phone\"\n          placeholder=\"123-456-7890\"\n          inputProps={{\n            inputMode: 'numeric',\n            pattern: '[0-9]*',\n          }}\n          margin=\"normal\"\n          required\n        />\n      </Box>\n      <Button\n        type=\"submit\"\n        disabled={isLoading}\n        variant=\"contained\"\n        size=\"small\"\n        sx={{ mt: 4 }}\n      >\n        Add contact\n      </Button>\n    </Form>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { IconButton, Box, Link, Container } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport PhoneIphoneIcon from '@mui/icons-material/PhoneIphone';\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\nimport { deleteContact } from 'redux/operation';\n\nexport const ContactItem = ({ id, name, phone }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    toast.success(`Contact ${name} has been removed from the contacts.`);\n    return dispatch(deleteContact(id));\n  };\n\n  const LinkTo = `tel:${phone}`;\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n      }}\n    >\n      <Container sx={{ m: 1 }}>\n        <Box\n          sx={{\n            display: 'flex',\n            // justifyContent: 'start',\n            alignItems: 'center',\n          }}\n        >\n          <AccountBoxIcon sx={{ color: 'action.active', mr: 1 }} />\n          {name}:\n        </Box>\n        <Link\n          href={LinkTo}\n          underline=\"hover\"\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n          }}\n        >\n          <PhoneIphoneIcon sx={{ color: 'action.active', mr: 1 }} />\n          {phone}\n        </Link>\n      </Container>\n      <IconButton\n        type=\"button\"\n        onClick={() => handleDelete(id)}\n        variant=\"outlined\"\n        size=\"Normal\"\n        sx={{ color: 'action.active', ml: 4 }}\n      >\n        <DeleteIcon />\n      </IconButton>\n    </Box>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 420px;\n  padding: 0 10px;\n`;\n\nexport const Item = styled.li`\n  list-style: none;\n  border-bottom: 2px solid rgb(212, 212, 212);\n`;","import { useSelector } from 'react-redux';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { List, Item } from './ContactsList.styled';\nimport { selectVisibleContacts } from 'redux/selectors';\n\nexport const ContactsList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <>\n      {visibleContacts.length > 0 && (\n        <List>\n          {visibleContacts.map(({ _id, name, phone }) => {\n            return (\n              <Item key={_id}>\n                <ContactItem id={_id} name={name} phone={phone} />\n              </Item>\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { Box, TextField } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const query = event.target.value;\n\n    dispatch(setFilter(query));\n  };\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\n      <TextField\n        label=\"Find contacts by name\"\n        // variant=\"standard\"\n        type=\"text\"\n        onChange={handleChange}\n      />\n    </Box>\n  );\n};\n","import { RotatingLines } from 'react-loader-spinner';\nimport { Container } from '@mui/material';\n\nexport const Loader = () => {\n  return (\n    <Container\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        padding: '2px',\n      }}\n    >\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"52\"\n        visible={true}\n      />\n    </Container>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { IconButton, Box } from '@mui/material';\nimport LibraryAddIcon from '@mui/icons-material/LibraryAdd';\nimport { Section } from 'components/Section/Section';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Fillter/Fillter';\nimport { Loader } from 'components/Loader/Loader';\nimport { fetchContacts } from 'redux/operation';\nimport { selectError, selectIsLoading, selectContacts } from 'redux/selectors';\n\nconst ContactsView = () => {\n  const [addContact, setAddContact] = useState(false);\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n    setAddContact(false);\n  }, [dispatch]);\n\n  const handleAddContact = () => {\n    setAddContact(true);\n    // setAddContact(addContact => !addContact);\n  };\n\n  const closeForm = () => {\n    setAddContact(false);\n  };\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <Box sx={{ width: '50%' }}>\n        {contacts.length > 0 ? (\n          <Section title=\"Your contacts\">\n            {!isLoading && !error && <Filter />}\n            {isLoading && !error && <Loader />}\n            <ContactsList />\n          </Section>\n        ) : (\n          <Section title=\"You have no contacts\">\n            {isLoading && !error && <Loader />}\n          </Section>\n        )}\n      </Box>\n      {\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'start',\n            width: '50%',\n          }}\n        >\n          {!addContact && (\n            <Box sx={{ mt: 2 }}>\n              <Box\n                sx={{\n                  display: 'inline-block',\n                  fontSize: 24,\n                  fontWeight: 700,\n                  color: 'rgb(100, 100, 100)',\n                  mr: 4,\n                }}\n              >\n                Add contact\n              </Box>\n              <IconButton\n                type=\"button\"\n                onClick={handleAddContact}\n                sx={{ mt: 0, p: 0 }}\n              >\n                <LibraryAddIcon sx={{ fontSize: 40 }} />\n              </IconButton>\n            </Box>\n          )}\n\n          {addContact && (\n            <Section title=\"Phonebook\">\n              <ContactForm onSubmit={closeForm} />\n            </Section>\n          )}\n        </Box>\n      }\n    </Box>\n  );\n};\n\nexport default ContactsView;\n"],"names":["Title","styled","Section","title","children","Box","sx","display","justifyContent","alignItems","flexDirection","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","filter","selectFilter","normalizeFilter","toLowerCase","contact","name","includes","Form","ContactForm","onSubmit","dispatch","useDispatch","useSelector","event","preventDefault","target","elements","value","inputNumber","phone","length","substr","dublicateName","find","dublicateNumber","toast","reset","addContact","AccountCircle","color","mr","mb","TextField","label","variant","type","placeholder","inputProps","inputMode","pattern","margin","required","PhoneIphone","Button","disabled","size","mt","ContactItem","id","LinkTo","Container","m","AccountBox","Link","href","underline","IconButton","onClick","deleteContact","handleDelete","ml","Delete","List","Item","ContactsList","visibleContacts","map","_id","Filter","onChange","query","setFilter","Loader","padding","strokeColor","strokeWidth","animationDuration","width","visible","useState","setAddContact","useEffect","fetchContacts","fontSize","fontWeight","p","LibraryAdd"],"sourceRoot":""}